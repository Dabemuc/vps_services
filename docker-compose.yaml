services:
  # Traefik as revers- proxy, tls provider and loadbalancer
  traefik:
    image: traefik:v3.0
    ports:
      - 80:80
      - 443:443
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # So that Traefik can react to docker events
      - letsencrypt:/letsencrypt  # Volume to store TLS certs
      - ./basicauth:/basicauth # Mount this directory into containers root
    command:
      # General
      - --api.dashboard=true
      - --log.level=INFO
      - --accesslog=true
      # Setup docker provider
      - --providers.docker.network=proxy
      - --providers.docker.exposedByDefault=false
      # Setup Http entrypoint as web and redirect to https
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entryPoints.web.http.redirections.entrypoint.scheme=https
      # Setup Https/TLS entrypoint
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.asDefault=true
      - --entrypoints.websecure.http.tls.certresolver=myresolver
      - --certificatesresolvers.myresolver.acme.email=mail@${HOST_DOMAIN}
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    labels:
      # Setup dashboard routing on traefik. subdomain
      - traefik.enable=true
      - traefik.http.routers.mydashboard.rule=Host(`traefik.${HOST_DOMAIN}`)
      - traefik.http.routers.mydashboard.service=api@internal
      # Secure dashboard with basicauth
      - traefik.http.routers.mydashboard.middlewares=myauth
      - traefik.http.middlewares.myauth.basicauth.usersfile=/basicauth/usersfile

  # Example container
  whoami:
    image: traefik/whoami:v1.8
    networks:
      - proxy
    labels:
      # Setup routing to this service
      - traefik.enable=true
      - traefik.http.routers.mywhoami.rule=Host(`whoami.${HOST_DOMAIN}`) || Host(`www.whoami.${HOST_DOMAIN}`)
      - traefik.http.services.mywhoami.loadbalancer.server.port=80
      # Redrirect form www.
      - traefik.http.middlewares.mywwwredirect.redirectregex.regex=^https://www\.(.*)
      - traefik.http.middlewares.mywwwredirect.redirectregex.replacement=https://$${1}
      - traefik.http.routers.mywhoami.middlewares=mywwwredirect

  # Host Obsidian markdown files
  quartz:
    build:
      context: ./quartz/quartz_repo
    networks:
      - proxy
    environment:
      - HOST_DOMAIN=${HOST_DOMAIN}
    volumes:
      - ./quartz/quartz_content:/usr/src/app/content
      - type: bind
        source: ./quartz/quartz.config.ts
        target: /usr/src/app/quartz.config.ts
    labels:
      # Setup routing to this service
      - traefik.enable=true
      - traefik.http.routers.myquartz.rule=Host(`quartz.${HOST_DOMAIN}`)
      - traefik.http.services.myquartz.loadbalancer.server.port=8080

networks:
  proxy:
    name: proxy

volumes:
  letsencrypt:
    name: letsencrypt
